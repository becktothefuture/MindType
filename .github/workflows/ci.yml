name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Prettier check
        run: pnpm format:check

      - name: Test with coverage
        run: pnpm test

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
name: MindTyper CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"
      - run: npm install -g pnpm
      - run: pnpm install --frozen-lockfile
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Rust Format
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: TypeScript Lint
        run: pnpm lint
      - name: Prettier format check
        run: pnpm format:check

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: npm install -g pnpm
      - run: pnpm install --frozen-lockfile
      - name: Run Rust tests
        run: cargo test --workspace
      - name: Run unit tests
        run: pnpm test
      - name: Run e2e tests
        run: pnpm --prefix e2e test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: npm install -g pnpm
      - run: pnpm install --frozen-lockfile
      - name: Build WASM
        run: wasm-pack build crates/core-rs --target web --out-dir bindings/wasm/pkg
      - name: Typecheck project
        run: pnpm typecheck
