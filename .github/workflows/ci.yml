#╔════════════════════════════════════════════════════════════════════════╗
#║  ░  MINDTYPER CI WORKFLOW  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  ║
#║                                                                    ║
#║  Continuous Integration pipeline that runs on every push to main   ║
#║  and pull requests. Handles TypeScript, Rust, and WASM builds     ║
#║  with comprehensive testing, linting, and coverage reporting.      ║
#║                                                                    ║
#╚════════════════════════════════════════════════════════════════════╝
# WHAT ▸ GitHub Actions CI workflow for MindTyper
# WHY  ▸ Ensure code quality and prevent regressions
# HOW  ▸ Runs lint → test → build pipeline with both TS and Rust checks

name: MindTyper CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml
            e2e/pnpm-lock.yaml
            web-demo/pnpm-lock.yaml
      - run: pnpm install --frozen-lockfile
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Rust Format
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: TypeScript Lint
        run: pnpm lint
      - name: Prettier format check
        run: pnpm format:check

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml
            e2e/pnpm-lock.yaml
            web-demo/pnpm-lock.yaml
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: pnpm install --frozen-lockfile
      - name: Run Rust tests
        run: cargo test --workspace
      - name: Run unit tests with coverage
        run: pnpm test
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Run e2e tests
        run: pnpm --prefix e2e test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml
            e2e/pnpm-lock.yaml
            web-demo/pnpm-lock.yaml
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: pnpm install --frozen-lockfile
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build WASM
        run: wasm-pack build crates/core-rs --target web --out-dir bindings/wasm/pkg
      - name: Typecheck project
        run: pnpm typecheck

  linkcheck:
    name: Docs Link Check
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install lychee
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose --no-progress --accept 200,206,429 --exclude-path './coverage' './**/*.md' './**/*.mdc'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}